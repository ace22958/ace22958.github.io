<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>色神加戈のBLOG</title>
  
  
  <link href="http://seshenjiage.eu.org/atom.xml" rel="self"/>
  
  <link href="http://seshenjiage.eu.org/"/>
  <updated>2024-11-12T07:51:04.991Z</updated>
  <id>http://seshenjiage.eu.org/</id>
  
  <author>
    <name>江珂</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第八步-优化主题</title>
    <link href="http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E5%85%AB%E6%AD%A5-%E4%BC%98%E5%8C%96%E4%B8%BB%E9%A2%98/"/>
    <id>http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E5%85%AB%E6%AD%A5-%E4%BC%98%E5%8C%96%E4%B8%BB%E9%A2%98/</id>
    <published>2024-11-12T07:40:07.000Z</published>
    <updated>2024-11-12T07:51:04.991Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/106060640">来自知乎博主的优化主题文章</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/106060640&quot;&gt;来自知乎博主的优化主题文章&lt;/a&gt;&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>第七步-设置next主题</title>
    <link href="http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/"/>
    <id>http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/</id>
    <published>2024-11-12T07:17:11.000Z</published>
    <updated>2024-11-12T07:37:00.830Z</updated>
    
    <content type="html"><![CDATA[<p>现在博客也搭建好了，但是这样光秃秃的什么也没有不好看，是时候美化一波了！<span id="more"></span></p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>当前用得最多的是next主题，那为什么用得多呢？当然是符合大多数人的审美。我使用的是next(v7.7.1)，下载地址：<a href="theme-next/hexo-theme-next">theme-next&#x2F;hexo-theme-next</a></p><p>打开博客根目录Blog文件夹，右键Git Bash，输入如下代码将next主题下载到目录Blog&#x2F;themes：</p><blockquote><p>git clone <a href="https://github.com/theme-next/hexo-theme-next">https://github.com/theme-next/hexo-theme-next</a> themes&#x2F;next</p></blockquote><p><img src="/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/1.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/2.jpg"></p><p>打开根目录下的_config.yml(称为<strong>站点配置文件</strong>)，修改主题（<strong>注意冒号井号后都要有空格</strong>）：</p><blockquote><p>#Site<br>title: 枫叶苑  #标题<br>subtitle: ‘’<br>description: 选择有时候比努力更重要     #简介或者格言<br>keywords:<br>author: 枫叶     #作者<br>language: zh-CN     #主题语言<br>timezone: Asia&#x2F;Shanghai    #中国的时区</p></blockquote><blockquote><p>#Extensions<br>##Plugins: <a href="https://hexo.io/plugins/">https://hexo.io/plugins/</a><br>##Themes: <a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>theme: next   #主题改为next</p></blockquote><p>主题语言主要是看你的themes&#x2F;next&#x2F;language中的简体中文是 zh-CN 还是 zh-Hans：<img src="/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/3.jpg"></p><p>next主题有四种，如下图依次为Muse、Mist、Pisces、Gemini（反正我没看出来后两个有什么区别）：<img src="/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/4.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/5.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/6.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/7.jpg"></p><p>我选的是Gemini，打开目录Blog&#x2F;themes&#x2F;next&#x2F;下的_config.yml（称为<strong>主题配置文件</strong>），只要将你选的主题前的#删除就行了：</p><blockquote><p>#Schemes<br>#scheme: Muse<br>#scheme: Mist<br>#scheme: Pisces<br>scheme: Gemini    #这是我选的主题</p></blockquote><p>回到根目录打开Git Bash，输入如下三条命令：</p><blockquote><p>hexo clean<br>hexo g<br>hexo d</p></blockquote><p>完成后打开你的博客：<img src="/2024/11/12/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/8.jpg"></p><p>问题：改主题为Gemini时，hexo clean，hexo g，hexo d 三个命令完成后主题未改变；</p><p>解决办法：删除next下的.git文件夹（这好像是个隐藏文件夹），再上传时修改成功。</p><p>附：后来我又发现用 hexo s 命令查看网页部署时是成功的，但是 hexo d 部署到GitHub上就不行，后来等一会就行了，可能是有延迟。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;现在博客也搭建好了，但是这样光秃秃的什么也没有不好看，是时候美化一波了！&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第六步-解析域名</title>
    <link href="http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/"/>
    <id>http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/</id>
    <published>2024-11-12T07:07:31.000Z</published>
    <updated>2024-11-12T07:15:57.054Z</updated>
    
    <content type="html"><![CDATA[<h3 id="解析域名"><a href="#解析域名" class="headerlink" title="解析域名 "></a>解析域名 <span id="more"></span></h3><p>第一步：登录<a href="https://wanwang.aliyun.com/">万网</a>，点击控制台，在你已购买的域名后点击解析添加两条解析记录：<img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/1.jpg"><img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/2.jpg"></p><p>那个IPV4地址可以通过ping得到，具体方法是：打开cmd输入下面命令：</p><blockquote><p>ping fengye97.github.io    #ping + 你的GitHub的网址</p></blockquote><p><img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/3.jpg"></p><p>第二步：打开 Blog 文件夹里的 source 文件夹，添加CNAME文件，可以先创建一个CNAME.txt文件，打开后写上你的域名，不要加www否则每次访问都必须加www，但如果不带有www，以后访问的时候带不带www都可以访问，保存后记得要重命名，将.txt删除，如下图：<img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/4.jpg"><img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/5.jpg"></p><p>第三步回到 Blog 文件夹，右键打开 Git Bash，依次输入下面三条命令：</p><blockquote><p>hexo clean<br>hexo g<br>hexo d</p></blockquote><p>打开GitHub，看看CNAME文件是否已经在你的项目中，点击<em>settings</em>：<img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/6.jpg"></p><p>查看你的网址是否已保存：<img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/7.jpg"></p><p>如果是空白的看看能不能自己填上去，我的<em>save</em>键一直是灰白的不能点击，但我的CNAME文件传上去了之后就自动填上了。如果你没有CNAME文件，可以自己添加，方法如下：<img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/8.jpg"><img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/9.jpg"><img src="/2024/11/12/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/10.jpg"></p><p>这样就完成啦！这时候你就可以浏览器直接输入你的域名就会进入你搭建的网页啦！</p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;解析域名&quot;&gt;&lt;a href=&quot;#解析域名&quot; class=&quot;headerlink&quot; title=&quot;解析域名 &quot;&gt;&lt;/a&gt;解析域名&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第五步-安装node.js和Hexo</title>
    <link href="http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/"/>
    <id>http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/</id>
    <published>2024-11-12T06:40:05.000Z</published>
    <updated>2024-11-12T07:03:49.449Z</updated>
    
    <content type="html"><![CDATA[<p>废话不多说，开始！<span id="more"></span></p><h3 id="1-安装nodejs"><a href="#1-安装nodejs" class="headerlink" title="1. 安装nodejs"></a>1. 安装nodejs</h3><p>下载地址：<a href="https://nodejs.org/en/">node.js官网</a><img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/1.jpg"></p><p>如上图，直接点击下载，完成后双击安装，安装直接默认<em>next</em>就好，很简单，需要改的也就是安装位置改一下，我是在D盘新建了一个文件夹 nodejs，安装在这个文件夹里。如果要看详细到每一步的话，可以看一下这个文章：<a href="https://blog.csdn.net/antma/article/details/86104068">node.js安装详细步骤教程</a>。</p><p>安装完成可以用打开cmd检验一下是否安装成功，用 node -v 和 npm -v 命令检查版本，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/2.jpg"></p><h4 id="设置npm在安装全局模块时的路径和环境变量"><a href="#设置npm在安装全局模块时的路径和环境变量" class="headerlink" title="设置npm在安装全局模块时的路径和环境变量"></a>设置npm在安装全局模块时的路径和环境变量</h4><p>因为如果不设置的话，安装模块的时候就会把模块装到C盘，占用C盘的空间，并且有可能安装好hexo后却无法使用，所以我们需要设置一下：</p><p>在 nodejs 文件夹中新建两个空文件夹 node_cache、node_global，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/3.jpg"></p><p>打开cmd，输入如下两个命令：</p><blockquote><p>npm config set prefix “D:\nodejs\node_global”<br>npm config set cache “D:\nodejs\node_cache”</p></blockquote><p><img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/4.jpg"></p><p>设置环境变量：<em>win10系统</em>–&gt;<em>打开控制面板</em>–&gt;<em>系统</em>–&gt;<em>高级系统设置</em>–&gt;<em>环境变量</em>，然后在系统变量中新建一个变量名为“NODE_PATH”，值为“D:\nodejs\node_global\node_modules”，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/5.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/6.jpg"></p><p>然后编辑用户变量里的Path，将相应npm的路径改为：D:\nodejs\node_global，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/7.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/8.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/9.jpg"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>在 cmd 命令下执行 npm install webpack -g ：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/10.jpg"></p><p>然后 webpack 这个模块已经在我们设置默认的文件夹中了：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/11.jpg"></p><h3 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2. 安装Hexo"></a>2. 安装Hexo</h3><p>Hexo就是我们的个人博客网站的框架，在安装之前，我们要先在GitHub上创立一个仓库，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/12.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/13.jpg"></p><p>点击 settings 设置：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/14.jpg"></p><p>滑到页面底端，出现如下图所示就说明已经成功了：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/15.jpg"></p><p>接下来就是安装Hexo，首先在D盘建立一个文件夹 Blog，点开 Blog 文件夹，鼠标右键打开 Git Bush Here，输入npm命令安装Hexo：</p><blockquote><p>npm install -g hexo-cli</p></blockquote><p><img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/16.jpg"></p><p>安装完成后，输入 hexo init 命令初始化博客：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/17.jpg"></p><p>然后输入 hexo g 静态部署：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/18.jpg"></p><p>这时网页已经部署完成，输入 hexo s 命令可以查看：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/19.jpg"></p><p>浏览器输入 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以打开新部署的网页：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/20.jpg"></p><p>看完之后 ctrl +c 停止运行服务器。</p><h4 id="将Hexo部署到GitHub"><a href="#将Hexo部署到GitHub" class="headerlink" title="将Hexo部署到GitHub"></a>将Hexo部署到GitHub</h4><p>现在回到我们的 Blog 文件夹，用笔记本打开 _config.yml 文件，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/21.jpg"></p><p>下滑到文件底部，填上如下内容：</p><blockquote><p>deploy:<br>  type: git<br>  repository: <a href="https://github.com/fengye97/fengye97.github.io.git">https://github.com/fengye97/fengye97.github.io.git</a>  #你的仓库地址<br>  branch: master</p></blockquote><p>注意空格：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/22.jpg"></p><p>你的仓库地址就是下图这个：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/23.jpg"></p><p>然后回到 Blog 文件夹中，打开 Git Bash，安装Git部署插件，输入命令：</p><blockquote><p>npm install hexo-deployer-git –save</p></blockquote><p><img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/24.jpg"></p><p>然后分别输入以下三条命令：</p><blockquote><p>hexo clean   #清除缓存文件 db.json 和已生成的静态文件 public<br>hexo g       #生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)<br>hexo d       #自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</p></blockquote><p><img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/25.jpg"></p><p>完成以后，打开浏览器，输入 <a href="https://xxx.github.io/">https://xxx.github.io</a> 就可以打开你的网页了：<img src="/2024/11/12/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node-js%E5%92%8CHexo/26.jpg"></p><p>现在虽然可以访问我们的网站，但是网址是GitHub提供的：<a href="http://xxxx.github.io/">http://xxxx.github.io</a> 而我们想使用我们自己的个性化域名，这就需要绑定我们自己的域名。下一篇介绍解析域名和绑定域名。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;废话不多说，开始！&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第四步-购买域名</title>
    <link href="http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/"/>
    <id>http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/</id>
    <published>2024-11-12T06:28:51.000Z</published>
    <updated>2024-11-12T06:38:04.659Z</updated>
    
    <content type="html"><![CDATA[<p>购买域名有几个网站，<span id="more"></span>可以在Godaddy上，也可以在万网，腾讯云等网站购买，我是在万网上购买的，一个.com的域名第一年就55元。</p><p>具体过程我就不详述了，以免又被当成是广告信息给我把号都封了。就说一下实名认证，选好要购买的域名后，需要创建一个个人信息模板，创造好后等待认证，此时可以直接付款购买，购买完成后等待认证就可以了，时间也不长，我的几分钟还是十几分钟就给我发短信认证成功了。</p><p>阿里云万网购买域名详细步骤：</p><p>首先登录万网：<a href="https://wanwang.aliyun.com/">万网-阿里云官网</a><img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/1.jpg"></p><p>如果没有注册要先注册一个账号，如果已经注册过直接登录就行，然后点击控制台：<img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/2.jpg"></p><p>点击域名：<img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/3.jpg"></p><p>点击域名注册：</p><p>先查询你要注册的域名是否已经被注册：<img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/4.jpg"></p><p>如果你需要的域名没有被注册，点击<em>加入清单</em>，再点击<em>立即结算</em>：<img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/5.jpg"></p><p>先选择你要的年限，再点击<em>个人</em>，接着点击<em>创建新的信息模板</em>：<img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/6.jpg"><img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/7.jpg"></p><p>填完下图信息，点击<em>保存</em>即可：<img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/8.jpg"></p><p>接下来，先验证邮箱，再实名认证：<img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/9.jpg"></p><p>验证邮箱即登录填的邮箱，然后打开万网给你发的邮件验证，实名认证需要上传身份证，如下图：<img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/10.jpg"></p><p>上面说验证需要3-5个工作日，此时模板还是未认证状态，但是也可以支付，勾选模板，再勾选<em>我已阅读</em>，点击<em>立即购买</em>：<img src="/2024/11/12/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/11.jpg"></p><p>支付成功后，等待认证就可以了，其实我没等一会儿就认证成功了，也不需要几天。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;购买域名有几个网站，&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第三步-绑定GitHub并提交文件</title>
    <link href="http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/"/>
    <id>http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/</id>
    <published>2024-11-12T05:34:24.000Z</published>
    <updated>2024-11-12T06:23:17.740Z</updated>
    
    <content type="html"><![CDATA[<p>在之前我已经完成了GitHub的注册还有git的安装，现在就是将git与GitHub绑定了。为什么要绑定GitHub呢？就是为了方便我们上传文件。虽然在GitHub上我们可以直接上传文件，但是我试了一下发现并不好用，点击上传完全没反应，可能是网络的原因吧。所以我们利用SSH来完成GitHub的绑定并提交文件，这样很方便快捷。首先来简单介绍一下SSH协议。<span id="more"></span></p><p>SSH（安全外壳协议，Secure Shell 的缩写）是建立在应用层基础上的安全协议。SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议，利用 SSH 协议可以有效防止远程管理过程中的信息泄露问题。简单来说，SSH就是保障你的账户安全，将你的数据加密压缩，不仅防止其他人截获你的数据，还能加快传输速度。如果想详细了解的话，可以看这篇文章：<a href="https://blog.csdn.net/qq_35246620/article/details/54317740">详述 SSH 的原理及其应用 - CSDN</a>，下面就详细介绍如何绑定GitHub和提交文件。</p><h3 id="1-绑定GitHub"><a href="#1-绑定GitHub" class="headerlink" title="1.绑定GitHub"></a>1.绑定GitHub</h3><p>我们要用git上传文件到GitHub首先得利用SSH登录远程主机，而登录方式有两种：一种是口令登录；另一种是公钥登录。口令登录每次都要输入密码十分麻烦，而公钥登录就省去了输入密码的步骤，所以我们选择公钥授权。首先我们得在 GitHub 上添加 SSH key 配置，要想生成SSH key，就要先安装 SSH，不过我们安装了 Git Bash，其应该自带了 SSH。检验一下是否安装 SSH，我们在新建的文件夹中右键打开 Git Bash：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/1.jpg"></p><p>输入 ssh 命令，查看本机是否安装 SSH：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/2.jpg"></p><p>如上图所示，即已安装 SSH. 然后，输入 ssh-keygen -t rsa 命令（<em>注意空格</em>），表示我们指定 RSA 算法生成密钥，然后敲四次回车键，之后就就会生成两个文件，分别为秘钥 id_rsa 和公钥 id_rsa.pub. （<em>注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和 Shift+insert。</em>）文件的位置在 Git Bash 上面都有显示，默认生成在以下目录：</p><ul><li>Linux 系统：~&#x2F;.ssh</li><li>Mac 系统：~&#x2F;.ssh</li><li>Windows 10 ：C:&#x2F;Users&#x2F;ASUS&#x2F;.ssh</li></ul><p>接下来我们要做的事情就是把公钥 id_rsa.pub 的内容添加到 GitHub。复制公钥 id_rsa.pub 文件里的内容，你可以通过目录找到 id_rsa.pub 文件的位置，用记事本打开文件复制。如果你实在找不到文件也没有关系，按照以下步骤直接在 Git Bash 上打开就行：</p><blockquote><p>$ cd ~&#x2F;.ssh<br>$ ls<br>$ cat id_rsa.pub</p></blockquote><p><img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/3.jpg"></p><p>（<em>再次注意：git中的复制粘贴不是 Ctrl+C 和 Ctrl+V，而是 Ctrl+insert 和Shift+insert。</em>）接下来进入我们的 GitHub 主页，先点击右上角，再点击 <em>settings</em> ：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/4.jpg"></p><p>如下图，先点击 <em>SSH and GPG keys</em>，再点击 <em>New SSH key</em>.<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/5.jpg"></p><p>将复制的公钥 id_rsa.pub 的内容粘贴到 key 内，再点击 <em>Add SSH key</em>，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/6.jpg"></p><p>验证是否成功，我们可以通过在 Git Bash 中输入 ssh -T <a href="mailto:&#x67;&#105;&#116;&#x40;&#x67;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#x6d;">&#x67;&#105;&#116;&#x40;&#x67;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#x6d;</a> 进行检验：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/7.jpg"></p><p>第一次会出现这种情况，填 yes 就行，若出现下图中的情况，则表明绑定成功：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/8.jpg"></p><h3 id="2-提交文件"><a href="#2-提交文件" class="headerlink" title="2.提交文件"></a>2.提交文件</h3><p>提交文件有两种方法：</p><h4 id="第一种：本地没有-git-仓库"><a href="#第一种：本地没有-git-仓库" class="headerlink" title="第一种：本地没有 git 仓库"></a>第一种：本地没有 git 仓库</h4><ol><li>直接将远程仓库 clone 到本地；</li><li>将文件添加并 commit 到本地仓库；</li><li>将本地仓库的内容push到远程仓库。</li></ol><h4 id="第二种：本地有-Git-仓库，并且我们已经进行了多次-commit-操作"><a href="#第二种：本地有-Git-仓库，并且我们已经进行了多次-commit-操作" class="headerlink" title="第二种：本地有 Git 仓库，并且我们已经进行了多次 commit 操作"></a>第二种：本地有 Git 仓库，并且我们已经进行了多次 commit 操作</h4><ol><li>建立一个本地仓库进入，init 初始化；</li><li>关联远程仓库；</li><li>同步远程仓库和本地仓库；</li><li>将文件添加提交到本地仓库；</li><li>将本地仓库的内容 push 到远程仓库。</li></ol><h4 id="第一种方法详细步骤："><a href="#第一种方法详细步骤：" class="headerlink" title="第一种方法详细步骤："></a>第一种方法详细步骤：</h4><p>首先，进入GitHub个人主页：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/9.jpg"></p><p>点击进入我新建的 <em>text</em> 项目：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/10.jpg"></p><p>点击 <em>Clone or download</em>，再复制地址，然后进入我们准备存储 Git 仓库的目录，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/11.jpg"></p><p>接下来，输入 git clone <a href="https://github.com/fengye97/text.git">https://github.com/fengye97/text.git</a> ，将远程仓库 clone 到本地，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/12.jpg"></p><p>我们看看 clone 到本地的仓库内容与远程仓库的内容，是否完全一致：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/13.jpg"></p><p>现在我们创建一个 text.txt 测试文件，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/14.jpg"></p><p>从此目录进入 Git Bash，输入 git status 命令查看仓库状态：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/15.jpg"></p><p>text 已经是一个 Git 仓库了，而我们刚刚创建的文件 text.txt 没有被追踪，也就是没有提交到本地仓库。现在我们使用 git add 命令将文件添加到了「临时缓冲区」，再用 git commit -m “提交信息” 将其提交到本地仓库，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/16.jpg"></p><p>如果你是第一次提交的话，就会出现下图的情况，会让你输入用户名和邮箱：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/17.jpg"></p><blockquote><p>#你只要再加两行代码就行：<br>$ git config –global user.name”fengye97”<br>$ git config –global user.email”<a href="mailto:&#120;&#x78;&#x78;&#64;&#120;&#120;&#120;&#46;&#99;&#111;&#x6d;">&#120;&#x78;&#x78;&#64;&#120;&#120;&#120;&#46;&#99;&#111;&#x6d;</a>“</p></blockquote><p>完成后输入 git log 命令查看仓库提交日志：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/18.jpg"></p><p>再输入 git status 查看一下仓库状态：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/19.jpg"></p><p>现在输入 git push origin master 命令，将本地仓库提交到远程仓库，origin是远程主机的名字：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/20.jpg"></p><p>第一次上传需要输入密码，验证成功后，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/21.jpg"></p><p>刷新 GitHub 中 text 仓库：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/22.jpg"></p><p>这时我们的测试文件已经上传到了 text 仓库中。</p><h4 id="第二种方法详细步骤："><a href="#第二种方法详细步骤：" class="headerlink" title="第二种方法详细步骤："></a>第二种方法详细步骤：</h4><p>首先，我们建立一个本地仓库 demo，使用 git init 命令初始化这个仓库，如下图:<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/23.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/24.jpg"></p><p>输入 git remote add origin github.com&#x2F;fengye97&#x2F;text.git 命令，关联远程仓库，接着输入 git pull origin master 命令，同步远程仓库和本地仓库，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/25.jpg"></p><p>回到本地仓库，发现我们已经把远程仓库的内容同步到了本地仓库：<img src="/2024/11/12/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/26.jpg"></p><p>接下来的步骤就与第一种方法一样（可以参考上面，已经写得很详细了），先输入 git add 和 git commit 命令，将要提交的文件添加并提交到 demo 仓库；然后再输入 git push origin master 命令，将本地仓库修改（或者添加）的内容提交到远程仓库就完成啦！！！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在之前我已经完成了GitHub的注册还有git的安装，现在就是将git与GitHub绑定了。为什么要绑定GitHub呢？就是为了方便我们上传文件。虽然在GitHub上我们可以直接上传文件，但是我试了一下发现并不好用，点击上传完全没反应，可能是网络的原因吧。所以我们利用SSH来完成GitHub的绑定并提交文件，这样很方便快捷。首先来简单介绍一下SSH协议。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第二步-Git2.25.0详细安装步骤</title>
    <link href="http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/"/>
    <id>http://seshenjiage.eu.org/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/</id>
    <published>2024-11-12T04:51:47.000Z</published>
    <updated>2024-11-12T05:28:03.099Z</updated>
    
    <content type="html"><![CDATA[<p>Git 2.25.0 安装步骤：</p><span id="more"></span><p>进入Git官网Git官网，点击 Downloads 下载：<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/1.jpg"><br>选择你的系统类型，我的是 Windows：<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/2.jpg"><br>应该会直接弹出下载，如果没弹出的话，选择适合你的系统的即可，如下图：<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/3.jpg"><br>下载完成双击打开：<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/4.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/5.jpg"><br>可以选择 Git 安装位置，然后点击 next：<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/6.jpg"><br>保持默认就好，直接点击 next：<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/7.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/8.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/9.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/10.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/11.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/12.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/13.jpg"><img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/14.jpg"><br>完成后选择打开 Git Bash 即可：<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/15.jpg"><br>检验成功，点击鼠标右键，出现下图中图标即完成：<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/16.jpg"></p><p>打开 Git Bash, 输入git:<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/17.jpg"><br>回车得到如下图：<img src="/2024/11/12/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2-25-0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/18.jpg"><br>此时你的 Git 就已经安装完成啦！</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Git 2.25.0 安装步骤：&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第一步-注册github</title>
    <link href="http://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/"/>
    <id>http://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/</id>
    <published>2023-05-23T01:22:24.502Z</published>
    <updated>2024-11-11T07:12:31.958Z</updated>
    
    <content type="html"><![CDATA[<p>注册GitHub详细步骤：</p><span id="more"></span><p>打开官网:GitHub官网</p><h3 id="1-如下图点击-sign-up-注册"><a href="#1-如下图点击-sign-up-注册" class="headerlink" title="1.如下图点击 sign up 注册"></a>1.如下图点击 sign up 注册</h3><p><img src="/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/1.png"><br>注意：我点击sign up 之后，弹出如下页面，箭头所指提示 GitHub 不支持这个浏览器（我用的是搜狗），我看了一下，支持 Chrome，Firefox，就用了 Firefox<br><img src="/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/2.png"></p><h3 id="2-用-Firefox-打开-GitHub-官网，进入注册页面："><a href="#2-用-Firefox-打开-GitHub-官网，进入注册页面：" class="headerlink" title="2.用 Firefox 打开 GitHub 官网，进入注册页面："></a>2.用 Firefox 打开 GitHub 官网，进入注册页面：</h3><p><img src="/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/3.png"><br>填完上图中的昵称、邮箱地址（QQ&#x2F;163邮箱都行）、密码（确保至少有15个字符或至少包括数字和小写字母的8个字符），再验证一下，点击 Next: select a plan, 进入如下页面：<br><img src="/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/4.png"></p><h3 id="3-如上图所示，在选择账户类型这里有一点需要我们注意，那就是：GitHub-的仓库分为两种，一种是public-repositories公开免费版，一种是private-repositories私有付费版。其中，免费版是完全公开的，而私有版一般是由企业或者不愿公开仓库的个人用户购买，在这里，我们选择免费版就可以，然后点击-Choose-Free，进入如下界面："><a href="#3-如上图所示，在选择账户类型这里有一点需要我们注意，那就是：GitHub-的仓库分为两种，一种是public-repositories公开免费版，一种是private-repositories私有付费版。其中，免费版是完全公开的，而私有版一般是由企业或者不愿公开仓库的个人用户购买，在这里，我们选择免费版就可以，然后点击-Choose-Free，进入如下界面：" class="headerlink" title="3.如上图所示，在选择账户类型这里有一点需要我们注意，那就是：GitHub 的仓库分为两种，一种是public repositories公开免费版，一种是private repositories私有付费版。其中，免费版是完全公开的，而私有版一般是由企业或者不愿公开仓库的个人用户购买，在这里，我们选择免费版就可以，然后点击 Choose Free，进入如下界面："></a>3.如上图所示，在选择账户类型这里有一点需要我们注意，那就是：GitHub 的仓库分为两种，一种是public repositories公开免费版，一种是private repositories私有付费版。其中，免费版是完全公开的，而私有版一般是由企业或者不愿公开仓库的个人用户购买，在这里，我们选择免费版就可以，然后点击 Choose Free，进入如下界面：</h3><p><img src="/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/5.png"></p><h3 id="4-如上图所示，有一个问卷调查，填不填都无所谓，如果填完就点击-Complete-setup-如果不想填就点击-Skip-this-step-跳过，不管选择哪个都会进入如下页面："><a href="#4-如上图所示，有一个问卷调查，填不填都无所谓，如果填完就点击-Complete-setup-如果不想填就点击-Skip-this-step-跳过，不管选择哪个都会进入如下页面：" class="headerlink" title="4.如上图所示，有一个问卷调查，填不填都无所谓，如果填完就点击 Complete setup, 如果不想填就点击 Skip this step 跳过，不管选择哪个都会进入如下页面："></a>4.如上图所示，有一个问卷调查，填不填都无所谓，如果填完就点击 Complete setup, 如果不想填就点击 Skip this step 跳过，不管选择哪个都会进入如下页面：</h3><p><img src="/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/6.png"></p><h3 id="5-接下来就是验证邮箱地址了，GitHub会发送邮件到你刚才填的邮箱地址，例如我填的是QQ邮箱，登录QQ邮箱，打开收到的邮件，如下图："><a href="#5-接下来就是验证邮箱地址了，GitHub会发送邮件到你刚才填的邮箱地址，例如我填的是QQ邮箱，登录QQ邮箱，打开收到的邮件，如下图：" class="headerlink" title="5.接下来就是验证邮箱地址了，GitHub会发送邮件到你刚才填的邮箱地址，例如我填的是QQ邮箱，登录QQ邮箱，打开收到的邮件，如下图："></a>5.接下来就是验证邮箱地址了，GitHub会发送邮件到你刚才填的邮箱地址，例如我填的是QQ邮箱，登录QQ邮箱，打开收到的邮件，如下图：</h3><p><img src="/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/7.png"><br>点击 Verify email address, 进入登陆页面, 在username　or email address填写用户名或者邮箱, 在password填写密码, 填好信息点击 sign in 登录, 会要求填写验证码, 此时验证码已发送到你的邮箱<br><img src="/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/8.png"><br>输入验证码，进入如下页面：<br><img src="/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/9.png"><br>点击创建仓库，现在你就有一个名为hello的项目了,<br>到这里已经基本上完成了注册!</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;注册GitHub详细步骤：&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>从零开始搭建个人博客</title>
    <link href="http://seshenjiage.eu.org/2023/05/23/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://seshenjiage.eu.org/2023/05/23/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2023-05-23T01:04:35.871Z</published>
    <updated>2024-11-11T07:09:16.379Z</updated>
    
    <content type="html"><![CDATA[<p>搭建一个个人博客需要什么呢？</p><span id="more"></span><p>唯一需要的就是耐心、坚持，你需要在遇到问题时自己去网上查找答案，有时候一个问题就要查半天，最后还有可能没解决，但是当问题解决时的满足感令人愉悦。</p><p>我是利用GitHub+Hexo搭建博客，我买了个.com的域名，一年55元（价格会有波动，有时还会有优惠码），你也可以选一个便宜的只要8元一年，甚至你可以不用买域名（对搭建网站没有影响），但是我觉得我登录网站时输入<a href="http://xxx.com很有格调./">http://xxx.com很有格调。</a></p><p>下面你只要一步一步跟着走就能搭建属于你的博客网站啦！</p><h2 id="第一步-注册github"><a href="#第一步-注册github" class="headerlink" title="第一步-注册github"></a><a href="https://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E4%B8%80%E6%AD%A5-%E6%B3%A8%E5%86%8Cgithub/">第一步-注册github</a></h2><h2 id="第二步-Git2-25-0详细安装步骤"><a href="#第二步-Git2-25-0详细安装步骤" class="headerlink" title="第二步-Git2.25.0详细安装步骤"></a><a href="https://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E4%BA%8C%E6%AD%A5-Git2.25.0%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%AD%A5%E9%AA%A4/">第二步-Git2.25.0详细安装步骤</a></h2><h2 id="第三步-绑定GitHub并提交文件"><a href="#第三步-绑定GitHub并提交文件" class="headerlink" title="第三步-绑定GitHub并提交文件"></a><a href="https://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E4%B8%89%E6%AD%A5-%E7%BB%91%E5%AE%9AGitHub%E5%B9%B6%E6%8F%90%E4%BA%A4%E6%96%87%E4%BB%B6/">第三步-绑定GitHub并提交文件</a></h2><h2 id="第四步-购买域名"><a href="#第四步-购买域名" class="headerlink" title="第四步-购买域名"></a><a href="https://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E5%9B%9B%E6%AD%A5-%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D/">第四步-购买域名</a></h2><h2 id="第五步-安装node-js和Hexo"><a href="#第五步-安装node-js和Hexo" class="headerlink" title="第五步-安装node.js和Hexo"></a><a href="https://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E4%BA%94%E6%AD%A5-%E5%AE%89%E8%A3%85node.js%E5%92%8CHexo/">第五步-安装node.js和Hexo</a></h2><h2 id="第六步-解析域名"><a href="#第六步-解析域名" class="headerlink" title="第六步-解析域名"></a><a href="https://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E5%85%AD%E6%AD%A5-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D/">第六步-解析域名</a></h2><h2 id="第七步-设置next主题"><a href="#第七步-设置next主题" class="headerlink" title="第七步-设置next主题"></a><a href="https://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E4%B8%83%E6%AD%A5-%E8%AE%BE%E7%BD%AEnext%E4%B8%BB%E9%A2%98/">第七步-设置next主题</a></h2><h2 id="第八步-优化主题"><a href="#第八步-优化主题" class="headerlink" title="第八步-优化主题"></a><a href="https://seshenjiage.eu.org/2023/05/23/%E7%AC%AC%E5%85%AB%E6%AD%A5-%E4%BC%98%E5%8C%96%E4%B8%BB%E9%A2%98/">第八步-优化主题</a></h2><h1 id="恭喜你，到这里就搭建完成啦！！！"><a href="#恭喜你，到这里就搭建完成啦！！！" class="headerlink" title="恭喜你，到这里就搭建完成啦！！！"></a>恭喜你，到这里就搭建完成啦！！！</h1>]]></content>
    
    
    <summary type="html">&lt;p&gt;搭建一个个人博客需要什么呢？&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>📡使用Github做一个完全免费的个人网站</title>
    <link href="http://seshenjiage.eu.org/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
    <id>http://seshenjiage.eu.org/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</id>
    <published>2023-05-22T04:55:15.735Z</published>
    <updated>2023-05-22T05:21:20.294Z</updated>
    
    <content type="html"><![CDATA[<p>操作步骤上手简单，即使非IT人员也很容易实现。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">局限：只能是静态网站的个人网站</span><br><span class="line">面向读者：所有人包括非IT人员</span><br></pre></td></tr></table></figure><span id="more"></span><p>首先如果你无法理解“静态网站”的话，那么相信我，静态网站就可以满足你大部分个人网站的需求。其次这篇文章更多的是面向非IT人员，因为我写这篇文章的原因是我的一个同学的故事：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我同学小A是律师，他想把自己处理过的一些案件记录在自己的个人博客中，他已经注册了公众号。但是他始</span><br><span class="line">终觉得有个网站或者个人博客会显得专业一些，而且还可以展示自己的个人履历，把这个网站链接放在公众号</span><br><span class="line">里面会显得跟专业一些。“好吧，我明白了~”</span><br></pre></td></tr></table></figure><p>而且学会自己搭建一个静态网站是一个很酷的事情，你可以做一些很漂亮的宣传页，或者表达自我主张的个人博客，或者在我以前的文章里面给别人做一个网页版生日祝福or纪念日等等。</p><p>所以开始吧~</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先我们要用到的工具是著名的开源社区Github，我们做的静态网站最终要托管在上面，这个功能叫做“Github Pages”，是一项免费的静态文件部署服务。</p><p>虽然Github是国外的网站，但是在国内可以访问并且速度还不错！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">有人担心，如果以后Github被墙了怎么办？</span><br><span class="line">放心，即使被墙了，你学会如下的操作依然可以在类似的国内平台，例如码云等</span><br></pre></td></tr></table></figure><h2 id="1-申请Github账号"><a href="#1-申请Github账号" class="headerlink" title="1.申请Github账号"></a>1.申请Github账号</h2><p>（如果有账号请直接登录然后跳转到教程下一步）</p><p>访问Github，点击SIGN UP按钮。（Sign in是登录的意思，应该都很好理解）还有Github是全英文的，没有中文的哦亲，但这不影响我们使用的。</p><p><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/1.png"></p><p>注册很简单，只需要用户名，密码，邮箱即可，不需要手机号。（对了，用户名用一个酷一点或者有意义一点的，因为它会出现在你的网址中）</p><p><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/2.png"></p><p>接着，Github会问你是否需要付费使用。这里选择不用，因为Github提供的免费服务已经能满足大部分人包括开发者的需要了。付费服务主要是面向团队以及企业。</p><p><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/3.png"></p><p>后面还会有一些步骤，大概意思就是问你想用Github做什么，你对Git的熟练程度，（感觉像是moba游戏新手调研都会这么做）因为Github网站迭代的原因可能会稍有不同。比如笔者这里试的时候是这样子的。</p><p><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/4.png"><br><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/5.png"><br><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/6.png"></p><p>然后Github会给你注册的邮箱发送一个确认链接，请点击链接确认，不激活的话是无法正常使用Github的服务的。这个是Github的反爬虫系统。（题外话：Github的反爬虫系统很强很强！）</p><p><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/7.png"></p><h2 id="2-创建一个仓库"><a href="#2-创建一个仓库" class="headerlink" title="2.创建一个仓库"></a>2.创建一个仓库</h2><p>接下来我们要创建一个仓库，仓库就是保存代码的地方，也就是保存网站的地方。这里我们做一个最简单的网站：个人简历。</p><p>1，首先点击“Your repositories”，查看个人全部仓库，第一次肯定是空空如也啊。<br><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/8.png"><br>2，接着我们新建一个仓库<br><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/9.png"><br>3，这一步很重要，仓库的名字不可以随便写，必须是 &lt;我的名字&gt;.github.io</p><p>比如我注册的名字是 zhihu1，所以这里我创建的仓库的名字必须是 ： <a href="http://zhihu1.github.io/">http://zhihu1.github.io</a><br><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/10.png"><br>4，接着下一步页面会比较复杂，你会看到一大堆看不懂的东西，其实那些事git操作提示。如果你熟练git的话就知道了。不过我们不管这些，我们只需要创建一个新的文件就行啦！<br><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/11.png"><br>5，新文件的名字不可以乱写哦，必须是 index.html，这里大家都一样都写这个。（题外话：静态http文件托管服务的默认访问文件就是index.html）<br><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/12.png"><br>可以参考笔者的内容如下，改成你自己的介绍哦~</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;Hello 大家好&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是霸都丶傲天，这是我的个人网站。 &lt;/p&gt;</span><br><span class="line">&lt;p&gt;很高兴你来到这里, 你可以在以下的网站找到我&lt;/p&gt;</span><br><span class="line"></span><br><span class="line">&lt;ul&gt;</span><br><span class="line">  &lt;li&gt; &lt;a href=&quot;https://www.zhihu.com/people/AJLoveChina&quot;&gt;知乎&lt;/a&gt; &lt;/li&gt;</span><br><span class="line">  &lt;li&gt; &lt;a href=&quot;http://hejie.nigeerhuo.com&quot;&gt;我的博客(已经不更细了,现在在知乎写文章)&lt;/a&gt; &lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><h2 id="3-查看网站的网址"><a href="#3-查看网站的网址" class="headerlink" title="3.查看网站的网址"></a>3.查看网站的网址</h2><p>到这里，我们一个最简单的个人网站的代码就完成了。接下来最重要的一步，我们需要知道网站的链接啊，只有这样，别人才能访问我们的网站呀。</p><p>1，点击settings</p><p><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/13.png"></p><p>2，然后往下翻找到 Github Pages， 看到绿色提示，后面的链接就是你的网站地址了，打开看看吧~</p><p>Tip：这里如果看不到绿色框框，没有URL。那是因为你的仓库名称与用户名不一致，不过不用担心，也是有办法的，看下面的第二张图片。</p><p><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/14.png"><br><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/15.png"></p><p>3，点开网站看一下</p><p><img src="/2023/05/22/%E4%BD%BF%E7%94%A8Github%E5%81%9A%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%85%8D%E8%B4%B9%E7%9A%84%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/16.png"></p><p>完成！</p><p>其实细心的同学会发现，其实我们的网站地址和我们写的仓库名称是一样的，是滴！而且非常有个性的是我们的名字还出现在网站地址中。</p><p>笔者的Github仓库&amp;&amp;网址：Git仓库地址 <a href="http://zhihu1.github.io/">http://zhihu1.github.io/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;操作步骤上手简单，即使非IT人员也很容易实现。&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;局限：只能是静态网站的个人网站&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;面向读者：所有人包括非IT人员&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://seshenjiage.eu.org/2023/05/21/hello-world/"/>
    <id>http://seshenjiage.eu.org/2023/05/21/hello-world/</id>
    <published>2023-05-21T11:07:34.831Z</published>
    <updated>2023-05-21T11:07:34.831Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
